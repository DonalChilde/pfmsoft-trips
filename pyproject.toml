[build-system]
requires = ["flit_core >=3.10,<4"]
build-backend = "flit_core.buildapi"

[project]
keywords = ['python']
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",

    "License :: OSI Approved :: MIT License",

]
authors = [{ name = "Chad Lowe", email = "pfmsoft.dev@gmail.com" }]
name = "pfmsoft.trips"
readme = "README.md"
requires-python = ">=3.13"
license = { file = "LICENSE" }
dynamic = ["version", "description"]
# https://chrisholdgraf.com/blog/2022/install-github-from-pyproject/
# https://peps.python.org/pep-0508/#examples
# "pfmsoft-snippets@git+https://github.com/donalchilde/pfmsoft-snippets@0.0.1"
# "pfmsoft-snippets-indexed-string@git+https://github.com/donalchilde/pfmsoft-snippets-indexed-string@dev"
dependencies = ["typer", "pydantic"]

# [project.scripts]
# pfmsoft-trips_typer = "pfmsoft_trips.cli.main_typer:app"

[project.urls]
Documentation = "https://github.com/DonalChilde/pfmsoft-trips#readme"
# Documentation_rtd = "https://pfmsoft-trips.readthedocs.io"
Issues = "https://github.com/DonalChilde/pfmsoft-trips/issues"
Source = "https://github.com/DonalChilde/pfmsoft-trips"


# [project.optional-dependencies]
# dev = [

#     # Automation
#     "nox",
#     "pre-commit",

#     # Linting and Formatting
#     "ruff",
#     "mypy",

#     # Tools
#     "pysnooper",
#     "scriv",
# ]

# doc = [
#     # Documentation
#     "Sphinx",
#     "sphinx-autobuild",
#     "sphinx-autodoc-typehints",
#     "sphinx_rtd_theme",
#     "myst-parser",
#     "sphinxcontrib-typer",
# ]
# vscode = ["esbonio", "rst2html", "rstcheck"]
# testing = ["pytest", "coverage[toml]", "pytest-cov"]


[dependency-groups]
dev = [

    # Automation
    "nox",
    "pre-commit",

    # Linting and Formatting
    "ruff",
    "mypy",

    # Tools
    "pysnooper",
    "scriv",

    # Testing
    "pytest",
    "coverage[toml]",
    "pytest-cov",

]
doc = [
    # Documentation
    "Sphinx",
    "sphinx-autobuild",
    "sphinx-autodoc-typehints",
    "sphinx_rtd_theme",
    "myst-parser",
    "sphinxcontrib-typer",
]
vscode_doc = ["esbonio", "rst2html", "rstcheck"]

[tool.ruff.lint]
select = ["B", "UP", "D", "DOC"]
# non-imperative-mood (D401)
exclude = ["D401"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
docstring-code-format = true

[tool.pytest.ini_options]
pythonpath = "src"
log_file = "logs/tests.log"
log_file_date_format = "%Y-%m-%dT%H:%M:%S.%f%z"
log_file_format = "%(asctime)s %(levelname)s:%(funcName)s: %(message)s [in %(pathname)s:%(lineno)d]"
log_file_level = "DEBUG"

[tool.coverage.run]
branch = true
parallel = true
# omit = [""]

[tool.scriv]
#version = "literal: pyproject.toml: project.version"
version = "literal: src/pfmsoft/trips/__init__.py: __version__"
format = "md"
md_header_level = "2"
entry_title_template = "file: changelog.d/templates/entry_title_template.md.j2"
new_fragment_template = "file: changelog.d/templates/new_fragment.${config:format}.j2"
